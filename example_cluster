#!/usr/bin/env python
"""
Simplified main entry point for the database query processor.
Handles a single query against a database.
"""

import sys
import time
import sqlite3
import os

# Import the optimized query processor
from optimized_schema_graph import OptimizedQueryProcessor

def main():
    """Simple entry point for processing a single query against a database."""
    # Check command line arguments
    if len(sys.argv) != 3:
        print("Usage: python simple_main.py <database_file> <query>")
        return 1
    
    db_file = sys.argv[1]
    query = sys.argv[2]
    
    # Check if database exists
    if not os.path.exists(db_file):
        print(f"Error: Database file '{db_file}' not found.")
        return 1
    
    # Initialize the query processor
    print(f"Initializing query processor with database: {db_file}")
    processor = OptimizedQueryProcessor(db_file)
    
    # Process the query
    print(f"\nProcessing query: '{query}'")
    start_time = time.time()
    results = processor.process_query(query)
    print(f"Query processed in {time.time() - start_time:.2f} seconds\n")
    
    # Print the results
    for subquery_result in results['subquery_results']:
        print(f"{subquery_result['subquery_id']}: {subquery_result['subquery_text']}")
        
        # Print generated SQL
        if subquery_result['sql_statements']:
            print("\nGenerated SQL statements:")
            for i, sql in enumerate(subquery_result['sql_statements']):
                print(f"\nSQL {i+1}:")
                print(sql)
                
                # Execute the SQL
                print("\nExecuting SQL:")
                query_results = processor.execute_sql(sql)
                if "error" in query_results:
                    print(f"Error: {query_results['error']}")
                else:
                    print(f"Found {len(query_results['rows'])} rows")
                    if query_results['rows']:
                        print(f"Columns: {', '.join(query_results['columns'])}")
                        for row in query_results['rows'][:5]:
                            print(row)
                        if len(query_results['rows']) > 5:
                            print(f"... and {len(query_results['rows'])-5} more rows")
        else:
            print("No SQL statements generated.")
        
        print("\n" + "-"*50)
    
    return 0

if __name__ == "__main__":
    sys.exit(main())
